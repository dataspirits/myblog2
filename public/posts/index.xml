<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on DataSpirits for R</title>
    <link>https://dataspirits2.netlify.app/posts/</link>
    <description>Recent content in Posts on DataSpirits for R</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 16 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://dataspirits2.netlify.app/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>dplyrでデータカウント</title>
      <link>https://dataspirits2.netlify.app/posts/2021-02-16-tips2/</link>
      <pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/2021-02-16-tips2/</guid>
      <description>twitterで目に留まったのでメモ。
重複しているデータの個数をカウントするときにdplyrでこういう書き方もできるよという話。
library(tidyverse)## -- Attaching packages --------------------------------------- tidyverse 1.3.0 --## √ ggplot2 3.3.3 √ purrr 0.3.4## √ tibble 3.0.5 √ dplyr 1.0.3## √ tidyr 1.1.2 √ stringr 1.4.0## √ readr 1.4.0 √ forcats 0.5.1## -- Conflicts ------------------------------------------ tidyverse_conflicts() --## x dplyr::filter() masks stats::filter()## x dplyr::lag() masks stats::lag()view(starwars)starwars %&amp;gt;% left_join(starwars %&amp;gt;% group_by(homeworld) %&amp;gt;% summarise(n=n()),by=&amp;quot;homeworld&amp;quot;) %&amp;gt;% filter(n&amp;gt;1)## # A tibble: 48 x 15## name height mass hair_color skin_color eye_color birth_year sex gender## &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; ## 1 Luke~ 172 77 blond fair blue 19 male mascu~## 2 C-3PO 167 75 &amp;lt;NA&amp;gt; gold yellow 112 none mascu~## 3 R2-D2 96 32 &amp;lt;NA&amp;gt; white, bl~ red 33 none mascu~## 4 Dart~ 202 136 none white yellow 41.</description>
    </item>
    
    <item>
      <title>壊れているパッケージの有無を確認</title>
      <link>https://dataspirits2.netlify.app/posts/2021-02-16-tips1/</link>
      <pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/2021-02-16-tips1/</guid>
      <description>タイトルの通り。
allPackages &amp;lt;- installed.packages()[, 1]findBrokenPackages &amp;lt;- function(packages) {for (p in packages) {tryCatch(ncol(asNamespace(p)$.__NAMESPACE__.$S3methods),error = function(e) print(c(p, e)))}}findBrokenPackages(allPackages)</description>
    </item>
    
    <item>
      <title>日経とダウの相関</title>
      <link>https://dataspirits2.netlify.app/posts/2021-02-11-post2/</link>
      <pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/2021-02-11-post2/</guid>
      <description>Excelで日経とダウ（前日）の相関係数を計算して何回かツイートしたが、これもRでやってしまおう。金融系の分析に便利な{tidyquant}を使う。
#パッケージの読み込みlibrary(tidyverse)library(tidyquant)td_get関数でYahoo!financeから取得してくれる。更新したくなったらコードを丸々再実行すればいい。めっちゃ楽。
#データ取得nky &amp;lt;- tq_get(&amp;quot;^N225&amp;quot;, from=&amp;quot;2018-01-01&amp;quot;) %&amp;gt;% select(date,adjusted)#ダウは１日遅れのデータ dji_lag &amp;lt;- tq_get(&amp;quot;^DJI&amp;quot;, from=&amp;quot;2018-01-01&amp;quot;) %&amp;gt;% tq_transmute(select=adjusted,mutate_fun = Lag)#結合してNAを削除して対数リターンを算出nd_join &amp;lt;- inner_join(nky,dji_lag,by=&amp;quot;date&amp;quot;) %&amp;gt;% rename(nky=2,dji=3) %&amp;gt;% drop_na() %&amp;gt;% tq_mutate(select=nky,mutate_fun = periodReturn,period=&amp;quot;daily&amp;quot;,type=&amp;quot;log&amp;quot;,col_rename = &amp;quot;nky_r&amp;quot;) %&amp;gt;% tq_mutate(select=dji,mutate_fun = periodReturn,period=&amp;quot;daily&amp;quot;,type=&amp;quot;log&amp;quot;,col_rename = &amp;quot;dji_r&amp;quot;) nd_join## # A tibble: 730 x 5## date nky dji nky_r dji_r## &amp;lt;date&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 2018-01-04 23506.</description>
    </item>
    
    <item>
      <title>このブログ作ったときのメモ</title>
      <link>https://dataspirits2.netlify.app/posts/2021-02-10-non-japanese-version/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/2021-02-10-non-japanese-version/</guid>
      <description>R blogdownRでいろいろちまちま実行することが多いので簡単に（本当に簡単に）メモできる環境が欲しかったので作成。 環境構築時のコードをメモ。
# blogdownのインストールdevtools::install_github(&amp;#39;rstudio/blogdown&amp;#39;)# hugoのインストールlibrary(blogdown)blogdown::install_hugo()Including PlotsなおRmarkdownでコードを実行するかどうかは次の通り。:
include #コードと結果を表示しないecho #コードを表示しないmessage #メッセージを表示しないeval #コードを実行しないプロジェクトを作成した後↓
#最初にnew_site()#これはちょっと古いっぽいnew_site(theme=&amp;quot;alanorth/hugo-theme-bootstrap4-blog&amp;quot;)#このブログはこれnew_site(theme=&amp;quot;vaga/hugo-theme-m10c&amp;quot;)# 編集内容を反映し統合build_site()# 反映内容を確認serve_site()#こういうのも必要らしいがまだやってないpublishDir = &amp;quot;docs&amp;quot;hasCJKLanguage = true#これも未使用new_content(&amp;quot;post/newContent.Rmd&amp;quot;)notepadいらねえなこれ。
記事追加する時や編集するときはpublicじゃなくてcontentのほうを編集するっぽい。
で、Knitしてpush。
pushするときにチェックつけていくんだがTool→Shellで「git add -A」と打てばおｋ。
アドインでNew postを使ったときは出来上がりの.Rmdのタイトルとかに&#34;&#34;がつかないので注意。
</description>
    </item>
    
    <item>
      <title>図表もちゃんと出るか確認した</title>
      <link>https://dataspirits2.netlify.app/posts/post5/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/post5/</guid>
      <description>R Markdownlibrary(tidyverse)library(tidyquant)FANG## # A tibble: 4,032 x 8## symbol date open high low close volume adjusted## &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;## 1 FB 2013-01-02 27.4 28.2 27.4 28 69846400 28 ## 2 FB 2013-01-03 27.9 28.5 27.6 27.8 63140600 27.8## 3 FB 2013-01-04 28.0 28.9 27.8 28.8 72715400 28.8## 4 FB 2013-01-07 28.7 29.8 28.6 29.4 83781800 29.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://dataspirits2.netlify.app/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://dataspirits2.netlify.app/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://dataspirits2.netlify.app/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://dataspirits2.netlify.app/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Test 9</title>
      <link>https://dataspirits2.netlify.app/posts/test-9/</link>
      <pubDate>Thu, 09 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/test-9/</guid>
      <description>Test 9</description>
    </item>
    
    <item>
      <title>Test 8</title>
      <link>https://dataspirits2.netlify.app/posts/test-8/</link>
      <pubDate>Wed, 08 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/test-8/</guid>
      <description>Test 8</description>
    </item>
    
    <item>
      <title>Test 7</title>
      <link>https://dataspirits2.netlify.app/posts/test-7/</link>
      <pubDate>Tue, 07 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/test-7/</guid>
      <description>Test 7</description>
    </item>
    
    <item>
      <title>Test 6</title>
      <link>https://dataspirits2.netlify.app/posts/test-6/</link>
      <pubDate>Mon, 06 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/test-6/</guid>
      <description>Test 6</description>
    </item>
    
    <item>
      <title>Test 5</title>
      <link>https://dataspirits2.netlify.app/posts/test-5/</link>
      <pubDate>Sun, 05 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/test-5/</guid>
      <description>Test 5</description>
    </item>
    
    <item>
      <title>Test 4</title>
      <link>https://dataspirits2.netlify.app/posts/test-4/</link>
      <pubDate>Sat, 04 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/test-4/</guid>
      <description>Test 4</description>
    </item>
    
    <item>
      <title>Test 2</title>
      <link>https://dataspirits2.netlify.app/posts/test-2/</link>
      <pubDate>Thu, 02 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/test-2/</guid>
      <description>Test 2</description>
    </item>
    
    <item>
      <title>Test 1</title>
      <link>https://dataspirits2.netlify.app/posts/test-1/</link>
      <pubDate>Wed, 01 Jan 1012 00:00:00 +0000</pubDate>
      
      <guid>https://dataspirits2.netlify.app/posts/test-1/</guid>
      <description>Test 1 I am referencing a footnote1
1package main 2 3import &amp;#34;fmt&amp;#34; 4 5func main() { 6 fmt.Println(&amp;#34;{linenos=inline}&amp;#34;) 7} 1 2 3 4 5 6 7  package main import &amp;#34;fmt&amp;#34; func main() { fmt.Println(&amp;#34;{linenos=table}&amp;#34;) }   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis in dictum tortor. Morbi laoreet enim id sem euismod lobortis. Donec quam libero, bibendum non cursus vitae, dictum vel eros.   I am the footnote &amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    
  </channel>
</rss>
